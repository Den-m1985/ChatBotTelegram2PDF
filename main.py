import os
import glob, os.path  # Multiple import in one line.
import shutil
import textwrap
import telebot
from fpdf import FPDF


# –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Ä–∞–±–æ—Ç–∞–ª–æ –Ω–∞–¥–æ –≤ –ø–∞–ø–∫–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª
# —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º TOKEN –≤ –Ω—ë–º –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ —ç–Ω—Ç—Ä–æ–≤ - —Ç–æ–ª—å–∫–æ —Ç–æ —á—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —É BotFather
def add_token(path):
    try:
        with open(path, 'r') as f:
            token = f.read().rstrip()
    except Exception as e:
        bot.reply_to(e)
    return token


bot = telebot.TeleBot(add_token('TOKEN'))
local_src = ""
SRC = './tmp_files/'


# 2 —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞.
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    if message.text == '/help':
        bot.reply_to(message, "–Ø —É–º–µ—é –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ .txt –≤ .pdf, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª c —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .txt")
    else:
        bot.reply_to(message, "–≠—Ç–æ—Ç –±–æ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .txt –≤ .pdf")


# –ß–∞—Ç –±–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–∞–π–ª—ã.
@bot.message_handler(content_types=['document'])
def handle_docs_photo_docs_photo(message):
    """
    —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    :type message: object
    """
    try:
        chat_id = message.chat.id
        real_file_name, real_file_extension = os.path.splitext(
            message.document.file_name)  # –ø–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞, —Ç–∞–∫ —á—Ç–æ –±—ã –ø—Ä–æ–Ω–µ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ –∫–æ–Ω—Ü–∞
        file_name = real_file_name.lower()
        file_extension = real_file_extension.lower()

        if file_extension == '.txt':  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = SRC + file_name + '_' + str(chat_id) + '_' + str(os.times().system)
            # —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑–º–µ—â–∞—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤–æ–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not os.path.exists(src):
                os.makedirs(src)
            # —Å–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            local_src = src + '/' + real_file_name + real_file_extension  # —ç—Ç–æ –∑–∞—á–µ–º?
            # –ø–∏—à–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
            with open(local_src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.reply_to(message, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é üòâ")

            convert_text_pdf(local_src)
            sendDocument(convert_text_pdf(local_src), chat_id)
            clear_catalog(SRC)
        else:
            bot.reply_to(message, f"—è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ '{file_extension}' —Ñ–æ—Ä–º–∞—Ç–∞ üò∂‚Äçüå´Ô∏èüòá")

    except Exception as e:
        bot.reply_to(message, e)


@bot.message_handler(func=lambda message: True)  # –ë–æ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫—Ä–æ–º–µ —Ñ–∞–π–ª–∞
# –∏ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
def echo(message):
    chat_id = message.from_user.id  # user_id –±–µ—Ä–µ—Ç—Å—è –∏–∑ id_—Å–æ–æ–±—â–µ–Ω–∏—è.
    text = '/start - bot info.\n/help - tips.'
    bot.send_message(chat_id, text)


# —Å–∞–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
def text_to_pdf(text, filename):
    a4_width_mm = 210
    pt_to_mm = 0.35
    fantasize_pt = 10
    fantasize_mm = fantasize_pt * pt_to_mm
    margin_bottom_mm = 10
    character_width_mm = 7 * pt_to_mm
    width_text = a4_width_mm / character_width_mm
    pdf = FPDF(orientation='P', unit='mm', format='A4')
    pdf.set_auto_page_break(True, margin=margin_bottom_mm)
    pdf.add_page()
    pdf.set_font(family='Courier', size=fantasize_pt)
    split = text.split('\n')
    for line in split:
        lines = textwrap.wrap(line, int(width_text))  # –ø–µ—Ä–µ–Ω–æ—Å
        if len(lines) == 0:
            pdf.ln()
        for wrap in lines:
            pdf.cell(0, fantasize_mm, wrap, ln=1)
    pdf.output(filename, 'F')


# –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ pdf
def convert_text_pdf(local_src):
    output_filename = local_src + '.pdf'
    file = open(local_src, encoding="utf-8")  # –µ—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å UTF-16 - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ñ–∞–π–ª–∞—Ö –≤ UTF-16,
    # –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç UTF-8, –∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π. –ù–∞–¥–æ –∫–∞–∫-—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞ –∏ —Ä–∞–∑–Ω—ã–º –≤–µ—Ç–∫–∞–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å
    # painting.txt –ø–æ–∫–∞ –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    text = file.read()
    file.close()
    text_to_pdf(text, output_filename)
    return output_filename


# –ø—Ä–æ—á–∏—â–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –æ—Ç –≤—Å–µ–≥–æ —á—Ç–æ –±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –¥–∏—Å–∫
def clear_catalog(folder):
    for filename in os.listdir(folder):
        file_path = os.path.join(folder, filename)
        try:
            if os.path.isfile(file_path) or os.path.islink(file_path):
                os.unlink(file_path)
            elif os.path.isdir(file_path):
                shutil.rmtree(file_path)
        except Exception as e:
            print('Failed to delete %s. Reason: %s' % (file_path, e))


# –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
def sendDocument(file_name: str, chat_id: str):
    doc = open(file_name, 'rb')
    bot.send_document(chat_id, doc)
    # bot.send_document(chat_id, "FILEID")
    doc.close()


bot.polling(none_stop=True, interval=0)
